#include <iostream>
#include <fstream>

using namespace std;

void Shifruvanna(char S[64], unsigned short Rez[64]) {
    for (int i = 0; i < 64; i++) {
        unsigned short r = 0;
        unsigned char c = S[i];
        
        // 1. Character position (6 bits)
        r = i & 0x3F; // 00111111
        
        // 2. Parity bit for position (1 bit)
        bool parity = false;
        for (int j = 0; j < 6; j++)
            if (r & (1 << j)) parity = !parity;
        r |= (parity << 6);
        
        // 3. ASCII code (8 bits)
        r |= (c << 7);
        
        // 4. Parity bit for ASCII code (1 bit)
        parity = false;
        for (int j = 7; j < 15; j++)
            if (r & (1 << j)) parity = !parity;
        r |= (parity << 15);
        
        Rez[i] = r;
    }
}

int main() {
    char S[64] = {0};
    unsigned short Rez[64];
    
    // Reading from file
    ifstream input("input.txt");
    if (!input) {
        cerr << "Error opening file!" << endl;
        return 1;
    }
    input.get(S, 64);
    input.close();

    // Filling with spaces
    for (int i = 0; i < 64; i++)
        if (!S[i]) S[i] = ' ';

    // Encryption
    Shifruvanna(S, Rez);
    
    cout << hex;
    for (int i = 0; i < 64; i++)
        cout << Rez[i] << endl;
    
    // Writing to binary file
    ofstream output("encrypted.bin", ios::binary);
    if (!output) {
        cerr << "Error creating file!" << endl;
        return 1;
    }
    output.write((char*)Rez, sizeof(Rez));
    output.close();

    cout << "Result saved to file 'encrypted.bin'." << endl;
    return 0;
}
